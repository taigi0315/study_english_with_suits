version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: langflix-postgres
    environment:
      POSTGRES_DB: langflix
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: langflix123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and job queue
  redis:
    image: redis:7-alpine
    container_name: langflix-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Celery Worker for background tasks
  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: langflix-celery-worker
    environment:
      - DATABASE_URL=postgresql://postgres:langflix123@postgres:5432/langflix
      - REDIS_URL=redis://redis:6379/0
      - GEMINI_API_KEY=${GEMINI_API_KEY}
    volumes:
      - .:/app
      - ./output:/app/output
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A langflix.tasks.celery_app worker --loglevel=info
    restart: unless-stopped

  # Celery Beat for scheduled tasks
  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: langflix-celery-beat
    environment:
      - DATABASE_URL=postgresql://postgres:langflix123@postgres:5432/langflix
      - REDIS_URL=redis://redis:6379/0
      - GEMINI_API_KEY=${GEMINI_API_KEY}
    volumes:
      - .:/app
      - ./output:/app/output
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A langflix.tasks.celery_app beat --loglevel=info
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
